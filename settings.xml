<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="e2695ec8-4359-40ad-94ad-ec14038d6a03" created="3.30.0" activeEnvironment="localhost" name="DPS-FFM Project" updated="3.30.0" encryptionMode="Not encrypted" compositeProjectFormat="1.3" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer>
    <con:oAuth2Profile>
      <con:name>Administrator</con:name>
      <con:type>OAuth 2.0</con:type>
      <con:accessTokenURI>https://ident.churchofjesuschrist.org/sso/oauth2/access_token</con:accessTokenURI>
      <con:accessToken>PE-pphLg9fPAFH1UE38Qv0pFxzQ</con:accessToken>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:accessTokenStatus>RETRIEVED_FROM_SERVER</con:accessTokenStatus>
      <con:accessTokenStartingStatus>RETRIEVED_FROM_SERVER</con:accessTokenStartingStatus>
      <con:accessTokenIssuedTime>1653510419</con:accessTokenIssuedTime>
      <con:clientID>HKp3YEbcTdU7dd8C</con:clientID>
      <con:resourceOwnerName>dps01</con:resourceOwnerName>
      <con:resourceOwnerPassword>dpsuser1</con:resourceOwnerPassword>
      <con:clientSecret>EBJ79sfWtpxEWp3IVzRMZyn9WJr0YuLx</con:clientSecret>
      <con:oAuth2Flow>RESOURCE_OWNER_PASSWORD_CREDENTIALS</con:oAuth2Flow>
      <con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod>
      <con:refreshToken>UQ4lxrX9jSUq68gZjIQ14FYv8I4</con:refreshToken>
      <con:scope>profile</con:scope>
      <con:accessTokenExpirationTime>1799</con:accessTokenExpirationTime>
      <con:jwtConfiguration/>
      <con:responseType>id_token</con:responseType>
    </con:oAuth2Profile>
  </con:oAuth2ProfileContainer>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="SubmitListener.beforeSubmit" name="SubmitListener.beforeSubmit">
    <con:script>// Import the required classes
import com.eviware.soapui.impl.rest.actions.oauth.OltuOAuth2ClientFacade;
import com.eviware.soapui.support.editor.inspectors.auth.TokenType;
import com.eviware.soapui.model.support.ModelSupport;



// Set up variables
def project = ModelSupport.getModelItemProject(context.getModelItem());
def authProfile = project.getAuthRepository().getEntry("Administrator");
def oldToken = authProfile.getAccessToken();
def tokenType = TokenType.ACCESS;



// Create a facade object
def oAuthFacade = new OltuOAuth2ClientFacade(tokenType);



// Request an access token in headless mode
oAuthFacade.requestAccessToken(authProfile, true, true);



// Wait until the access token gets updated
while(oldToken == authProfile.getAccessToken()) {
println "Updating token..."
}
//The sleep method can be used instead of a while loop
//sleep(3000);



// Post the info to the log
log.info("Set new token: " + authProfile.getAccessToken());</con:script>
  </con:eventHandlers>
  <con:environment id="537e5998-407f-49dd-ab95-7c9d7cae8dc6" name="Test" index="0">
    <con:service type="REST" name="DPS-FFM get jobs">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://dps-ffm-test.churchofjesuschrist.org</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM get profiles">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://dps-ffm-test.churchofjesuschrist.org</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM get actions">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://dps-ffm-test.churchofjesuschrist.org</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM post profile">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://dps-ffm-test.churchofjesuschrist.org</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM put profile">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://dps-ffm-test.churchofjesuschrist.org</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM get profile">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://dps-ffm-test.churchofjesuschrist.org</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM delete profile">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://dps-ffm-test.churchofjesuschrist.org</con:endpoint>
    </con:service>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:environment id="bded10cf-f107-436f-bdfd-cd9c3a04b7bf" name="Build" index="1">
    <con:service type="REST" name="DPS-FFM get jobs">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://dps-ffm-build.churchofjesuschrist.org</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM get profiles">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://dps-ffm-test.churchofjesuschrist.org</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM get actions">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://dps-ffm-test.churchofjesuschrist.org</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM post profile">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://dps-ffm-test.churchofjesuschrist.org</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM put profile">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://dps-ffm-test.churchofjesuschrist.org</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM get profile">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://dps-ffm-test.churchofjesuschrist.org</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM delete profile">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://dps-ffm-test.churchofjesuschrist.org</con:endpoint>
    </con:service>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:environment id="ec217cb2-577b-4207-b83b-6826a912ac3c" name="localhost" index="2">
    <con:service type="REST" name="DPS-FFM get jobs">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:8092</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM get profiles">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:8092</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM get actions">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:8092</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM post profile">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:8092</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM put profile">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:8092</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM get profile">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:8092</con:endpoint>
    </con:service>
    <con:service type="REST" name="DPS-FFM delete profile">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:8092</con:endpoint>
    </con:service>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:authRepository>
    <con:oAuth20AuthEntry>
      <con:name>Administrator</con:name>
      <con:type>OAuth 2.0</con:type>
      <con:accessTokenURI>https://ident.churchofjesuschrist.org/sso/oauth2/access_token</con:accessTokenURI>
      <con:accessToken>PE-pphLg9fPAFH1UE38Qv0pFxzQ</con:accessToken>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:accessTokenStatus>RETRIEVED_FROM_SERVER</con:accessTokenStatus>
      <con:accessTokenStartingStatus>RETRIEVED_FROM_SERVER</con:accessTokenStartingStatus>
      <con:accessTokenIssuedTime>1653510419</con:accessTokenIssuedTime>
      <con:clientID>HKp3YEbcTdU7dd8C</con:clientID>
      <con:resourceOwnerName>dps01</con:resourceOwnerName>
      <con:resourceOwnerPassword>dpsuser1</con:resourceOwnerPassword>
      <con:clientSecret>EBJ79sfWtpxEWp3IVzRMZyn9WJr0YuLx</con:clientSecret>
      <con:oAuth2Flow>RESOURCE_OWNER_PASSWORD_CREDENTIALS</con:oAuth2Flow>
      <con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod>
      <con:refreshToken>UQ4lxrX9jSUq68gZjIQ14FYv8I4</con:refreshToken>
      <con:scope>profile</con:scope>
      <con:accessTokenExpirationTime>1799</con:accessTokenExpirationTime>
      <con:jwtConfiguration/>
      <con:responseType>id_token</con:responseType>
    </con:oAuth20AuthEntry>
  </con:authRepository>
  <con:environmentSpec>
    <con:entry environmentId="537e5998-407f-49dd-ab95-7c9d7cae8dc6">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
    <con:entry environmentId="bded10cf-f107-436f-bdfd-cd9c3a04b7bf">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
    <con:entry environmentId="ec217cb2-577b-4207-b83b-6826a912ac3c">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
  </con:environmentSpec>
  <con:tags/>
</con:soapui-project>
